Scope : Terminal
{
    description: scopes
    lib: modules/flowcontrol
}

Bool : Terminal
{
    description: bool true
    lib: modules/flowcontrol
}

If : Terminal
{
    description: if else if
    lib: modules/flowcontrol
}

Equality : BinaryOperator
{
    description: ==
    lib: modules/flowcontrol
    matches: ==
    priority: 3
    associativity: left
    needsParseForMatch: false
}

Negation : UnaryOperator
{
    description: !
    lib: modules/flowcontrol
    matches: !
    priority: 8
    alignment: pre
    needsParseForMatch: false
}

Inequality : BinaryOperator
{
    description: !=
    lib: modules/flowcontrol
    matches: !=
    priority: 3
    associativity: left
    needsParseForMatch: false
}

LogicalAnd : BinaryOperator
{
    description: &&
    lib: modules/flowcontrol
    matches: &&
    priority: 2
    associativity: left
    needsParseForMatch: false
}

LogicalOr : BinaryOperator
{
    description: ||
    lib: modules/flowcontrol
    matches: ||
    priority: 1
    associativity: left
    needsParseForMatch: false
}

Less : BinaryOperator
{
    description: <
    lib: modules/flowcontrol
    matches: <
    priority: 4
    associativity: left
    needsParseForMatch: false
}

LessOrEqual : BinaryOperator
{
    description: <=
    lib: modules/flowcontrol
    matches: <=
    priority: 4
    associativity: left
    needsParseForMatch: false
}

Greater : BinaryOperator
{
    description: >
    lib: modules/flowcontrol
    matches: >
    priority: 4
    associativity: left
    needsParseForMatch: false
}

GreaterOrEqual : BinaryOperator
{
    description: >=
    lib: modules/flowcontrol
    matches: >=
    priority: 4
    associativity: left
    needsParseForMatch: false
}

RangedFor : Terminal
{
    description: ranged for
    lib: modules/flowcontrol
}

MultiLine : Terminal
{
    description: \n or ;
    lib: modules/flowcontrol
}

Return : Terminal
{
    description: return from function
    lib: modules/flowcontrol
}
