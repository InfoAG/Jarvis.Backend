Addition : BinaryOperator
{
    description: adds things together
    lib: modules/basicarith
    matches: +
    priority: 5
    associativity: left
    needsParseForMatch: false
}

Multiplication : BinaryOperator
{
    description: dude read the name
    lib: modules/basicarith
    matches: *
    priority: 6
    associativity: left
    needsParseForMatch: false
}

Division : BinaryOperator
{
    description: dude i'm serious
    lib: modules/basicarith
    matches: /
    priority: 6
    associativity: left
    needsParseForMatch: false
}

Subtraction : BinaryOperator
{
    description: are you retarded or something?
    lib: modules/basicarith
    matches: -
    priority: 5
    associativity: left
    needsParseForMatch: false
}

Exponentiation : BinaryOperator
{
    description: -.-
    lib: modules/basicarith
    matches: ^
    priority: 7
    associativity: right
    needsParseForMatch: false
}

Number : TerminalExpression
{
    description: just numbers
    lib: modules/basicarith
}

Pi : TerminalExpression
{
    description: circles. many of them.
    lib: modules/basicarith
}

Euler : TerminalExpression
{
    description: e
    lib: modules/basicarith
}

List : TerminalExpression
{
    description: list
    lib: modules/basicarith
}

Modulo : BinaryOperator
{
    description: modulo
    lib: modules/basicarith
    matches: %
    priority: 6
    associativity: left
    needsParseForMatch: false
}

Factorial : UnaryOperator
{
    description: factorial
    lib: modules/basicarith
    matches: !
    priority: 8
    alignment: post
    needsParseForMatch: false
}

Vector : TerminalExpression
{
    description: vector
    lib: modules/basicarith
}

Parenthesis : TerminalExpression
{
    description: ()
    lib: modules/basicarith
}

NaturalLogarithm : Function
{
    description: ln
    lib: modules/basicarith
    matches: ln,1
    priority: 1
}
